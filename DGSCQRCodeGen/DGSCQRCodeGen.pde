int[][] theQRCode = 
{{0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0},
 {0,0,0,0,0,0,0,0,1,1,1,0,0,1,1,1,0,0,0,0,0,0,0,0,0},
 {0,0,0,0,0,0,0,0,0,1,1,1,0,0,1,1,1,0,0,0,0,0,0,0,0},
 {0,0,0,2,0,0,0,0,1,1,0,1,1,1,1,1,0,0,0,0,0,2,0,0,0},
 {0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0},
 {0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,1,1,0,0,0,0,0,0,0,0},
 {0,0,0,0,0,0,0,0,1,0,1,0,1,0,1,0,1,0,0,0,0,0,0,0,0},
 {0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,1,0,0,0,0,0,0,0,0},
 {1,1,1,1,1,0,1,1,1,1,1,0,1,1,1,0,0,1,0,1,0,1,0,1,0},
 {0,0,0,0,0,0,0,0,1,1,0,1,0,1,0,0,1,1,0,1,0,0,0,1,0},
 {0,0,1,0,1,0,1,1,1,1,0,0,1,0,0,1,0,1,1,1,1,1,0,1,1},
 {0,1,1,1,1,1,0,0,0,1,1,1,0,0,1,0,1,1,0,1,0,0,0,0,1},
 {1,0,0,0,1,0,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,0,1,1,1},
 {0,1,1,1,0,1,0,0,1,1,1,1,1,1,0,0,1,1,0,1,0,1,0,1,0},
 {0,1,1,0,1,0,1,0,1,0,0,0,1,0,1,1,1,1,1,1,1,1,0,1,1},
 {0,1,0,1,1,0,0,0,0,1,0,0,1,0,0,1,0,1,0,1,1,0,0,0,1},
 {0,1,0,0,0,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,0,1,0,0},
 {0,0,0,0,0,0,0,0,1,0,0,1,0,0,1,1,1,0,0,0,1,1,0,0,0},
 {0,0,0,0,0,0,0,0,1,0,1,0,1,1,0,0,1,0,1,0,1,0,1,1,1},
 {0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,1,1,0,0,0},
 {0,0,0,0,0,0,0,0,1,1,0,0,0,1,1,1,1,1,1,1,1,0,1,1,0},
 {0,0,0,2,0,0,0,0,1,1,1,1,0,1,0,1,0,0,1,0,1,1,1,1,1},
 {0,0,0,0,0,0,0,0,1,1,0,0,0,0,1,0,0,0,0,0,0,1,1,0,1},
 {0,0,0,0,0,0,0,0,1,1,1,0,1,0,1,1,1,1,0,1,1,1,0,0,1},
 {0,0,0,0,0,0,0,0,1,0,1,1,1,1,1,0,0,0,0,1,1,1,1,1,1}};

color bgc = #D3D3D3; 
color outer = #4682B4; //color(30, 192, 211);
color inner = #87CEEB;
float circleSize = 17.0; // 20 or less
int count = 0;
 
void setup() {
  size(540, 540);
  noStroke();
  rectMode(CENTER);
  noLoop();
//noCursor();
}

void draw() {
  background(bgc);
  for (int i = 0; i < 25; i++) {
    for (int j = 0; j < 25; j++) {
      float x = 20 * j + 30;
      float y = 20 * i + 30;
      color c1 = lerpColor(inner, outer, map(dist(x, y, width/2, height/2), 0, 380, 0, 1));
      switch (theQRCode[i][j]) {
        case 1: {
          fill(c1);
          rect(x, y, circleSize, circleSize, 7);
          count ++;
          break;
        }
        case 2: {
          fill(c1);
          rect(x, y, 140, 140,7);
          fill(bgc);
          rect(x, y, 100, 100, 7);
          fill(c1);
          rect(x, y, 60, 60,7);
          count += 35;
          break;
        }
      }
    }
  }
  println(count + " tiles");
}
